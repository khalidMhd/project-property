[{"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js":"1","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js":"2","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js":"3","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js":"4","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js":"5","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js":"6","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js":"7","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js":"8","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js":"9","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js":"10","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js":"11","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js":"12","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js":"13","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js":"14","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js":"15","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js":"16","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js":"17","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js":"18","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js":"19","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js":"20","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js":"21","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js":"22","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js":"23","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js":"24","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js":"25","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js":"26","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js":"27","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js":"28","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js":"29","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js":"30","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js":"31","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js":"32","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js":"33","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js":"34","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js":"35","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js":"36","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js":"37","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\index.js":"38","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reportWebVitals.js":"39","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\App.js":"40","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\store\\Store.js":"41","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\settings.js":"42","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\unit.js":"43","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\Dashboard.js":"44","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\complaint.js":"45","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\item.js":"46","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\area.js":"47","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\category.js":"48","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\regulate.js":"49","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\auth\\singin.js":"50","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\auth.js":"51","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\items.js":"52","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\category.js":"53","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\unit.js":"54","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\area.js":"55","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\regulateItems.js":"56","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\complaint.js":"57","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\Navbar.js":"58","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\auth.js":"59","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\unit.js":"60","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\category.js":"61","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\items.js":"62","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\area.js":"63","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\complaint.js":"64","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\regulateItems.js":"65","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\chart\\regulateChart.js":"66","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\chart\\itemBarChart.js":"67","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\regulateItem.js":"68","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\items.js":"69","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\area.js":"70","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\complaint.js":"71","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\unit.js":"72","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\category.js":"73","H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\auth.js":"74"},{"size":662,"mtime":1627510351000,"results":"75","hashOfConfig":"76"},{"size":1478,"mtime":1630595486179,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1627510351000,"results":"78","hashOfConfig":"76"},{"size":1912,"mtime":1630595014082,"results":"79","hashOfConfig":"76"},{"size":30159,"mtime":1633631227303,"results":"80","hashOfConfig":"76"},{"size":20042,"mtime":1628420703519,"results":"81","hashOfConfig":"76"},{"size":11323,"mtime":1628428189293,"results":"82","hashOfConfig":"76"},{"size":20298,"mtime":1628483765210,"results":"83","hashOfConfig":"76"},{"size":4469,"mtime":1627510351000,"results":"84","hashOfConfig":"76"},{"size":19136,"mtime":1628483724031,"results":"85","hashOfConfig":"76"},{"size":4364,"mtime":1628419779376,"results":"86","hashOfConfig":"76"},{"size":2836,"mtime":1627510351000,"results":"87","hashOfConfig":"76"},{"size":1591,"mtime":1627510351000,"results":"88","hashOfConfig":"76"},{"size":2035,"mtime":1628415414564,"results":"89","hashOfConfig":"76"},{"size":2216,"mtime":1627510351000,"results":"90","hashOfConfig":"76"},{"size":2034,"mtime":1627510351000,"results":"91","hashOfConfig":"76"},{"size":2034,"mtime":1627510351000,"results":"92","hashOfConfig":"76"},{"size":630,"mtime":1628415482817,"results":"93","hashOfConfig":"76"},{"size":7203,"mtime":1632407511850,"results":"94","hashOfConfig":"76"},{"size":2184,"mtime":1628403072224,"results":"95","hashOfConfig":"76"},{"size":2002,"mtime":1628139068621,"results":"96","hashOfConfig":"76"},{"size":2172,"mtime":1628483776451,"results":"97","hashOfConfig":"76"},{"size":2005,"mtime":1628138531021,"results":"98","hashOfConfig":"76"},{"size":1792,"mtime":1627658970109,"results":"99","hashOfConfig":"76"},{"size":757,"mtime":1628418262041,"results":"100","hashOfConfig":"76"},{"size":631,"mtime":1627510351000,"results":"101","hashOfConfig":"76"},{"size":211,"mtime":1628415356035,"results":"102","hashOfConfig":"76"},{"size":726,"mtime":1627510351000,"results":"103","hashOfConfig":"76"},{"size":631,"mtime":1627510351000,"results":"104","hashOfConfig":"76"},{"size":633,"mtime":1627510351000,"results":"105","hashOfConfig":"76"},{"size":530,"mtime":1627510351000,"results":"106","hashOfConfig":"76"},{"size":978,"mtime":1628315462938,"results":"107","hashOfConfig":"76"},{"size":2904,"mtime":1632407342995,"results":"108","hashOfConfig":"76"},{"size":590,"mtime":1630595063933,"results":"109","hashOfConfig":"76"},{"size":187,"mtime":1630594864176,"results":"110","hashOfConfig":"76"},{"size":6654,"mtime":1631566237351,"results":"111","hashOfConfig":"76"},{"size":689,"mtime":1630594800803,"results":"112","hashOfConfig":"76"},{"size":662,"mtime":1627510351000,"results":"113","hashOfConfig":"114"},{"size":362,"mtime":1627510351000,"results":"115","hashOfConfig":"114"},{"size":1478,"mtime":1630595486179,"results":"116","hashOfConfig":"114"},{"size":1912,"mtime":1630595014082,"results":"117","hashOfConfig":"114"},{"size":4469,"mtime":1627510351000,"results":"118","hashOfConfig":"114"},{"size":20042,"mtime":1628420703519,"results":"119","hashOfConfig":"114"},{"size":11323,"mtime":1628428189293,"results":"120","hashOfConfig":"114"},{"size":6654,"mtime":1631566237351,"results":"121","hashOfConfig":"114"},{"size":30159,"mtime":1633631227303,"results":"122","hashOfConfig":"114"},{"size":19136,"mtime":1628483724031,"results":"123","hashOfConfig":"114"},{"size":20298,"mtime":1628483765210,"results":"124","hashOfConfig":"114"},{"size":4364,"mtime":1628419779376,"results":"125","hashOfConfig":"114"},{"size":2836,"mtime":1627510351000,"results":"126","hashOfConfig":"114"},{"size":1591,"mtime":1627510351000,"results":"127","hashOfConfig":"114"},{"size":2035,"mtime":1628415414564,"results":"128","hashOfConfig":"114"},{"size":2216,"mtime":1627510351000,"results":"129","hashOfConfig":"114"},{"size":2034,"mtime":1627510351000,"results":"130","hashOfConfig":"114"},{"size":2034,"mtime":1627510351000,"results":"131","hashOfConfig":"114"},{"size":630,"mtime":1628415482817,"results":"132","hashOfConfig":"114"},{"size":590,"mtime":1630595063933,"results":"133","hashOfConfig":"114"},{"size":7203,"mtime":1632407511850,"results":"134","hashOfConfig":"114"},{"size":1792,"mtime":1627658970109,"results":"135","hashOfConfig":"114"},{"size":2002,"mtime":1628139068621,"results":"136","hashOfConfig":"114"},{"size":2172,"mtime":1628483776451,"results":"137","hashOfConfig":"114"},{"size":2184,"mtime":1628403072224,"results":"138","hashOfConfig":"114"},{"size":2005,"mtime":1628138531021,"results":"139","hashOfConfig":"114"},{"size":689,"mtime":1630594800803,"results":"140","hashOfConfig":"114"},{"size":757,"mtime":1628418262041,"results":"141","hashOfConfig":"114"},{"size":978,"mtime":1628315462938,"results":"142","hashOfConfig":"114"},{"size":2904,"mtime":1632407342995,"results":"143","hashOfConfig":"114"},{"size":211,"mtime":1628415356035,"results":"144","hashOfConfig":"114"},{"size":633,"mtime":1627510351000,"results":"145","hashOfConfig":"114"},{"size":631,"mtime":1627510351000,"results":"146","hashOfConfig":"114"},{"size":187,"mtime":1630594864176,"results":"147","hashOfConfig":"114"},{"size":631,"mtime":1627510351000,"results":"148","hashOfConfig":"114"},{"size":726,"mtime":1627510351000,"results":"149","hashOfConfig":"114"},{"size":530,"mtime":1627510351000,"results":"150","hashOfConfig":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"n71n87",{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":"178","usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"181","usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"153"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":"229","usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v4xliq",{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":16,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":10,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\index.js",[],["313","314"],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\App.js",["315","316","317"],"import './App.css';\nimport { BrowserRouter, Route, Router, Switch, useLocation } from 'react-router-dom'\nimport SigninScreen from './screen/auth/singin';\nimport DashboardScreen from './screen/Dashboard';\nimport ItemsScreen from './screen/item';\nimport UnitScreen from './screen/unit';\nimport CategoryScreen from './screen/category';\nimport AreaScreen from './screen/area';\nimport SettingScreen from './screen/settings';\nimport RegulateScreen from './screen/regulate';\nimport ComplaintScreen from './screen/complaint';\n\nfunction App() {\n  var location = useLocation();\n  return (\n    <>\n\n      {location.pathname === '/signin'?\n        <Route exact path='/signin' component={SigninScreen} />\n      :\n          <div className=\"containerMain\">        \n                \n                {/* <Route exact path='/signup' component={signupScreen} /> */}\n                <Route exact path='/' component={DashboardScreen} />\n                <Route exact path='/items' component={ItemsScreen} />\n                <Route exact path='/units' component={UnitScreen} />\n                <Route exact path='/category' component={CategoryScreen} />\n                <Route exact path='/area' component={AreaScreen} />\n                <Route exact path='/settings' component={SettingScreen} />\n                <Route path='/regulate/:id' component={RegulateScreen} />\n                <Route path='/complaint' component={ComplaintScreen} />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\item.js",["318","319","320","321"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addItemsAction, deleteItemsAction, editItemsAction, listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { Link } from \"../../node_modules/react-router-dom/cjs/react-router-dom\";\nconst ItemsScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [minPrice, setMinPrice] = useState(\"\")\n    const [maxPrice, setMaxPrice] = useState(\"\")\n    const [unitId, setUnitId] = useState(\"\")\n    const [categoryId, setCategoryId] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    const [categoryFilter, setCategoryFilter] = useState(\"all\")\n    const [unitFilter, setUnitFilter] = useState(\"all\")\n    const [statusFilter, setStatusFilter] = useState(\"all\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading, error } = itemListData;\n\n    const itemAddData = useSelector(state => state.itemAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = itemAddData;\n\n    const itemDeleteData = useSelector(state => state.itemDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = itemDeleteData;\n\n    const itemEditData = useSelector(state => state.itemEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = itemEditData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList } = unitListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/items') : props.history.push('/signin');\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n\n    }, [userInfo])\n\n    var selectItems = itemList?.filter(function (data) {\n        if (categoryFilter !== 'all' && unitFilter !== 'all' && statusFilter === \"all\") {\n            return data?.category === categoryFilter && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter === 'all' && unitFilter !== 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.unit === unitFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"active\") {\n            return data?.isActive === true && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && unitFilter === 'all' && statusFilter === \"inActive\") {\n            return data?.isActive === false && data?.category === categoryFilter;\n        }\n\n        if (categoryFilter !== 'all' && statusFilter === \"active\" && unitFilter !== 'all') {\n            return data.isActive === true && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all' && statusFilter === \"inActive\" && unitFilter !== 'all') {\n            return data.isActive === false && data?.category === categoryFilter && data.unit === unitFilter;\n        }\n        if (unitFilter !== 'all') {\n            return data?.unit === unitFilter;\n        }\n        if (categoryFilter !== 'all') {\n            return data?.category === categoryFilter\n        }\n        if (statusFilter === \"active\") {\n            return data?.isActive === true;\n        }\n        if (statusFilter === \"inActive\") {\n            return data?.isActive === false;\n        }\n        if (statusFilter === \"all\") {\n            return data\n        }\n        else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Item Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Item Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Item Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addItemsAction(name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editItemsAction(id, name, unitId, categoryId, isActive, minPrice, maxPrice))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteItemsAction(id))\n    }\n\n    const updateHandler = (item) => {\n        setId(item?._id)\n        setName(item?.name)\n        setMinPrice(item?.minPrice)\n        setMaxPrice(item?.maxPrice)\n        setUnitId(item?.unitId)\n        setCategoryId(item?.categoryId)\n        setIsActive(item.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Items</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select className=\"form-control bg-light rounded\" onChange={(e) => setStatusFilter(e.target.value)} id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setCategoryFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Category</option>\n                                                            <option value=\"all\">All</option>\n                                                            {categoryList?.map(category =>\n                                                                <option value={category?.name}>{category?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group\">\n                                                        <select onChange={(e) => setUnitFilter(e.target.value)} className=\"form-control  bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Unit</option>\n                                                            <option value=\"all\">All</option>\n                                                            {unitList?.map(unit =>\n                                                                <option value={unit?.name}>{unit?.name}</option>\n                                                            )}\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {itemList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Min Price</th>\n                                                            <th scope=\"col\">Max Price</th>\n                                                            <th scope=\"col\">Unit</th>\n                                                            <th scope=\"col\">Category</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        {selectItems?.map(item =>\n                                                            <>\n                                                                <tr>\n                                                                    <th scope=\"row\">{serNo += 1}</th>\n                                                                    <td>{item?.name}</td>\n                                                                    <td>{item?.minPrice}</td>\n                                                                    <td>{item?.maxPrice}</td>\n                                                                    <td>{item?.unit}</td>\n                                                                    <td>{item?.category}</td>\n                                                                    <td>\n                                                                        <span class={item?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {item?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(item)} data-target={\"#edititems\" + item?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                        <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this item?')) deleteHandler(item?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                        <Link to={'/regulate/' + item?._id} title=\"Regulate\">\n                                                                            <i className=\"fa fa-eye text-success  ml-2\" style={{ cursor: \"pointer\" }} ></i>\n                                                                        </Link>\n                                                                        {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} title=\"active\"></i> */}\n                                                                    </td>\n                                                                </tr>\n\n\n                                                                {/* edit model */}\n\n                                                                <div className=\"modal fade\" id={\"edititems\" + item?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                        <div className=\"modal-content\">\n                                                                            <div className=\"modal-header text-center\">\n                                                                                <div className='modal-title w-100 '>\n                                                                                    <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                    <h4 className=\"text-muted\">Edit Item</h4>\n                                                                                </div>\n\n                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                    <span aria-hidden=\"true\">&times;</span>\n                                                                                </button>\n                                                                            </div>\n\n                                                                            {editLoading &&\n                                                                                <div className=\"text-center\">\n                                                                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                        <span className=\"sr-only\">Loading...</span>\n                                                                                    </div>\n                                                                                </div>}\n                                                                            {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                            <div className=\"modal-body\">\n                                                                                <form onSubmit={submitUpdHandler}>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" />\n                                                                                    </div>\n                                                                                    <div className=\"form-group\">\n                                                                                        <input type=\"number\" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" />\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={unitId} onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Unit</option>\n                                                                                            {unitList?.map(unit =>\n                                                                                                <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                                            )}\n\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group\">\n                                                                                        <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\">\n                                                                                            <option value=\"\" disabled selected>Category</option>\n                                                                                            {categoryList?.map(category =>\n                                                                                                <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                                            )}\n                                                                                        </select>\n                                                                                    </div>\n\n                                                                                    <div className=\"form-group \">\n                                                                                        <label className=\"checkbox checkbox-primary\">\n                                                                                            <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={item?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                            <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                    </div>\n\n                                                                                    <div>\n                                                                                        <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Item</button>\n                                                                                    </div>\n\n                                                                                </form>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        )}\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Item</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Item Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Name\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} value={minPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Min Price\" required />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} value={maxPrice} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Item Max Price\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setUnitId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Unit</option>\n                                                                {unitList?.map(unit =>\n                                                                    <> {unit.isActive === true && <option value={unit?._id}>{unit?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <select onChange={(e) => setCategoryId(e.target.value)} className=\"form-control border-top-0 border-left-0 border-right-0 rounded\" id=\"exampleFormControlSelect1\" required>\n                                                                <option value=\"\" disabled selected>Category</option>\n                                                                {categoryList.map(category =>\n                                                                    <> {category.isActive === true && <option value={category?._id}>{category?.name}</option>}</>\n                                                                )}\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Item</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ItemsScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\unit.js",["322","323","324","325"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { addUnitAction, deleteUnitAction, editUnirAction, listUnitAction } from \"../action/unit\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\n\nconst UnitScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const unitAddData = useSelector(state => state.unitAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = unitAddData;\n\n    const unitDeleteData = useSelector(state => state.unitDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = unitDeleteData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading, error } = unitListData;\n\n    const unitEditData = useSelector(state => state.unitEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = unitEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/units') : props.history.push('/signin');\n        dispatch(listUnitAction())\n    }, [userInfo])\n\n    var selectUnit = unitList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Unit Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Unit Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Unit Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addUnitAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editUnirAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteUnitAction(id))\n    }\n\n    const updateHandler = (unit) => {\n        setId(unit?._id)\n        setName(unit?.name)\n        setDescription(unit?.description)\n        setIsActive(unit.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n                < div className=\" m-4\">\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Units</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Status</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {unitList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectUnit?.map(unit =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{unit?.name}</td>\n                                                                        <td>{unit?.description}</td>\n                                                                        <td>\n                                                                            <span class={unit?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {unit?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(unit)} data-target={\"#edititems\" + unit?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this unit?')) deleteHandler(unit?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + unit?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Unit</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={unit?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Unit</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Unit</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Unit Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Unit Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Unit</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default UnitScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Dashboard.js",["326","327","328","329","330","331","332","333","334"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { listItemsAction } from \"../action/items\";\nimport { listCategoryAction } from \"../action/category\";\nimport { listUnitAction } from \"../action/unit\";\nimport { listAreaAction } from \"../action/area\";\nimport RegulareChart from \"./chart/regulateChart\";\nimport ItemBarChart from \"./chart/itemBarChart\";\nconst DashboardScreen = (props) => {\n    const dispatch = useDispatch()\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const itemListData = useSelector(state => state.itemListData);\n    const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading: listAreaLoading, error: listAreaError } = areaListData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading: listCategoryLoading, error: listCategoryError } = categoryListData;\n\n    const unitListData = useSelector(state => state.unitListData);\n    const { unitList, loading: listUnitLoading, error: listUnitError } = unitListData;\n    useEffect(() => {\n        userInfo ? props.history.push('/') : props.history.push('/signin')\n        dispatch(listItemsAction())\n        dispatch(listCategoryAction())\n        dispatch(listUnitAction())\n        dispatch(listAreaAction())\n\n    }, [userInfo])\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {listItemLoading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div> :\n                        <>\n                            {listItemError ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n\n                                    <div className=\"row d-flex \">\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#ff9f00', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart orange\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{itemList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#ff9f00\" }}>{itemList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Items</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#4CC790', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{areaList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: \"#4CC790\" }}>{areaList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Areas</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart \" style={{ borderBottomColor: '#3c9ee5' }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart blue\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{categoryList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#3c9ee5' }}>{categoryList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Categories</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"col-sm mt-2\">\n                                            <div className=\"d-flex justify-content-between card shadow bg-white rounded single-chart\" style={{ borderBottomColor: '#F75A5F', }}>\n                                                <div>\n                                                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart red\">\n                                                        <path className=\"circle-bg\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <path className=\"circle\"\n                                                            strokeDasharray=\"30, 100\"\n                                                            d=\"M18 2.0845\n                                                            a 15.9155 15.9155 0 0 1 0 31.831\n                                                            a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                                        />\n                                                        <text x=\"18\" y=\"20.35\" className=\"percentage\">{unitList?.length || 0}%</text>\n                                                    </svg>\n                                                </div>\n                                                <div className=\"svg-text\">\n                                                    <h3 style={{ color: '#F75A5F' }}>{unitList?.length || 0}</h3>\n                                                    <p className=' text-muted'>Total Units</p>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-sm\">\n                                            <div className=\"shadow bg-white rounded p-2\">\n                                                <ItemBarChart />\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </>\n                            }\n\n                        </>\n                    }\n\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default DashboardScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\category.js",["335","336","337","338"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { addCategoryAction, deleteCategoryAction, editCategoryAction, listCategoryAction } from \"../action/category\";\n\nconst CategoryScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const categoryAddData = useSelector(state => state.categoryAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = categoryAddData;\n\n    const categoryDeleteData = useSelector(state => state.categoryDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = categoryDeleteData;\n\n    const categoryListData = useSelector(state => state.categoryListData);\n    const { categoryList, loading, error } = categoryListData;\n\n    const categoryEditData = useSelector(state => state.categoryEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = categoryEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/category') : props.history.push('/signin');\n        dispatch(listCategoryAction())\n    }, [userInfo])\n\n    var selectCategory = categoryList?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Category Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Category Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast(\"Category Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addCategoryAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editCategoryAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteCategoryAction(id))\n    }\n\n    const updateHandler = (category) => {\n        setId(category?._id)\n        setName(category?.name)\n        setDescription(category?.description)\n        setIsActive(category.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <> <ToastContainer />\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Categories</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option defaultValue=\"\" disabled selected>Status</option>\n                                                            <option defaultValue=\"all\">All</option>\n                                                            <option defaultValue=\"active\">Active</option>\n                                                            <option defaultValue=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {categoryList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectCategory?.map(category =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{category?.name}</td>\n                                                                        <td>{category?.description}</td>\n                                                                        <td>\n                                                                            <span className={category?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {category?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(category)} data-target={\"#edititems\" + category?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this category?')) deleteHandler(category?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\" ></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + category?._id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Category</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                {editLoading &&\n                                                                                    <div className=\"text-center\">\n                                                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                                                            <span className=\"sr-only\">Loading...</span>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {editError && <h4 className=\"text-muted text-center\">Somethings Wrong</h4>}\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" defaultValue={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={category?.isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Category</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add Category</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">Category Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} defaultValue={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Category Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Category</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default CategoryScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\settings.js",["339"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport { editPasswordAction } from \"../action/auth\";\n\nconst SettingScreen = (props) => {\n    const dispatch = useDispatch()\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [matchPassword, setMatchPassword] = useState(\"\")\n    const [updatePassword, setUpdatePassword] = useState(\"\")\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const passwordEditData = useSelector(state => state.passwordEditData);\n    const { loading, error, success } = passwordEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/settings') : props.history.push('/signin');\n    }, [userInfo])\n\n    if (success) {\n        toast.success(\"Password Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editPasswordAction(currentPassword, updatePassword))\n    }\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n                    <ToastContainer />\n                    <div className='cart shadow bg-white rounded '>\n                        <div className='border border-top-0 border-left-0 border-right-0 '>\n                            <h5 className=\"text-muted pt-4 pb-4 pl-4\">Change Password</h5>\n                        </div>\n\n                        <form onSubmit={submitHandler} className=' p-3 mt-3'>\n                            {loading &&\n                                <div className=\"text-center\">\n                                    <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }\n\n                            {error &&\n                                <div className=' text-center'>\n                                    <p className=\"text-danger\">The current password is not match with old password.</p>\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setCurrentPassword(e.target.value)} value={currentPassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Current Password\" required />\n                            </div>\n                            <div className=\"form-group py-3\">\n                                <input type=\"password\" onChange={(e) => setUpdatePassword(e.target.value)} value={updatePassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" onChange={(e) => setMatchPassword(e.target.value)} value={matchPassword} className={matchPassword !== updatePassword ? \"form-control is-invalid\" : \"form-control\"} id=\"validationServer03\" placeholder=\"City\" required />\n                                {matchPassword !== updatePassword &&\n                                    <div className=\"invalid-feedback\">\n                                        Please enter the same value again.\n                                    </div>\n                                }\n                            </div>\n                            <div className='pt-4'>\n                                <button type=\"submit\" className=\"btn btn-primary mr-3\" style={{ width: '100px' }} disabled={matchPassword !== updatePassword}>Save</button>\n                                <button className=\"btn btn-secondary\" onClick={() => props.history.push('/')} style={{ width: '100px' }}>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default SettingScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\area.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { addAreaAction, deleteAreaAction, editAreaAction, listAreaAction } from \"../action/area\";\n\nconst AreaScreen = (props) => {\n    const dispatch = useDispatch()\n    const [isActiveFilter, setIsActiveFilter] = useState(\"all\")\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [id, setId] = useState(\"\")\n    let serNo = 0\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const areaAddData = useSelector(state => state.areaAddData);\n    const { loading: saveLoading, error: saveError, success: saveSuccess } = areaAddData;\n\n    const areaDeleteData = useSelector(state => state.areaDeleteData);\n    const { loading: DeleteLoading, error: deleteError, success: deleteSuccess } = areaDeleteData;\n\n    const areaListData = useSelector(state => state.areaListData);\n    const { areaList, loading, error } = areaListData;\n\n    const areaEditData = useSelector(state => state.areaEditData);\n    const { loading: editLoading, error: editError, success: editSuccess } = areaEditData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/area') : props.history.push('/signin');\n        dispatch(listAreaAction())\n    }, [userInfo])\n\n    var selectarea = areaList ?.filter(function (data) {\n        if (isActiveFilter === \"active\") {\n            return data ?.isActive === true;\n        } if (isActiveFilter === \"inActive\") {\n            return data ?.isActive === false;\n        } else {\n            return data\n        }\n    });\n\n    function handleCheck() {\n        setIsActive(!isActive)\n    }\n\n    if (deleteSuccess) {\n        toast.success(\"Area Deleted Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (saveSuccess) {\n        toast.success(\"Area Added Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    if (editSuccess) {\n        toast.success(\"Area Updated Successfully!\");\n        setTimeout(() => {\n            window.location.reload()\n        }, 2000);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addAreaAction(name, description, isActive))\n    }\n\n    const submitUpdHandler = (e) => {\n        e.preventDefault()\n        dispatch(editAreaAction(id, name, description, isActive))\n    }\n\n    const deleteHandler = (id) => {\n        dispatch(deleteAreaAction(id))\n    }\n\n    const updateHandler = (area) => {\n        setId(area ?._id)\n        setName(area ?.name)\n        setDescription(area ?.description)\n        setIsActive(area ?.isActive)\n    }\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n                                            <div className='col-sm-2'>\n                                                <form>\n                                                    <div className=\"form-group \">\n                                                        <select onChange={(e) => setIsActiveFilter(e.target.value)} className=\"form-control bg-light rounded\" id=\"exampleFormControlSelect1\">\n                                                            <option value=\"\" disabled selected>Search</option>\n                                                            <option value=\"all\">All</option>\n                                                            <option value=\"active\">Active</option>\n                                                            <option value=\"inActive\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </form>\n                                            </div>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                    <div>\n                                                        <i className=\"fas fa-plus-circle fa-2x mt-1 mr-1 text-info\" data-toggle=\"modal\" data-target=\"#additems\" style={{ cursor: \"pointer\" }} ></i>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {areaList.length === 0 ? <h5 className=\"text-muted text-center\">Item Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Description</th>\n                                                            <th scope=\"col\">Status</th>\n                                                            <th scope=\"col\">Actions</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {selectarea ?.map(area =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{area ?.name}</td>\n                                                                        <td>{area ?.description}</td>\n                                                                        <td>\n                                                                            <span class={area ?.isActive ? \"badge badge-pill badge-info\" : \"badge badge-pill badge-danger\"}> {area ?.isActive ? \"active\" : \"inactive\"} </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <i className=\"fa fa-pencil-alt text-info \" data-toggle=\"modal\" onClick={() => updateHandler(area)} data-target={\"#edititems\" + area ?._id} style={{ cursor: \"pointer\" }} title=\"Edit\"></i>\n                                                                            <i className=\"fa fa-trash-alt text-danger  ml-2\" onClick={() => { if (window.confirm('Are you sure to delete this area?')) deleteHandler(area ?._id) }} style={{ cursor: \"pointer\" }} title=\"Delete\"></i>\n                                                                            {/* <i className=\"fa fa-power-off text-muted ml-2\" style={{ cursor: \"pointer\" }} ></i> */}\n                                                                        </td>\n                                                                    </tr>\n\n\n                                                                    {/* edit model */}\n\n                                                                    <div className=\"modal fade\" id={\"edititems\" + area ?._id} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edititemsTitle\" aria-hidden=\"true\">\n                                                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                                            <div className=\"modal-content\">\n                                                                                <div className=\"modal-header text-center\">\n                                                                                    <div className='modal-title w-100 '>\n                                                                                        <p className=\"w-100 fa fa-pencil-alt fa-3x mt-1 mr-1 text-info\" ></p> <br />\n                                                                                        <h4 className=\"text-muted\">Edit Area</h4>\n                                                                                    </div>\n\n                                                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                        <span aria-hidden=\"true\">&times;</span>\n                                                                                    </button>\n                                                                                </div>\n\n                                                                                <div className=\"modal-body\">\n                                                                                    <form onSubmit={submitUpdHandler}>\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" />\n                                                                                        </div>\n\n                                                                                        <div className=\"form-group\">\n                                                                                            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" />\n                                                                                        </div>\n\n\n                                                                                        <div className=\"form-group \">\n                                                                                            <label className=\"checkbox checkbox-primary\">\n                                                                                                <input type=\"checkbox\" onChange={() => setIsActive(!isActive)} defaultChecked={area ?.isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                                                <span className=\" ml-1 h5 text-muted\">Active</span></label>\n                                                                                        </div>\n\n                                                                                        <div>\n                                                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Save Area</button>\n                                                                                        </div>\n\n                                                                                    </form>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                    {/* insert model */}\n\n                                    <div className=\"modal fade\" id=\"additems\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"additemsTitle\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header text-center\">\n                                                    <div className='modal-title w-100 '>\n                                                        <p className=\"w-100 fas fa-plus-circle fa-3x mt-1 mr-1 text-info \" ></p> <br />\n                                                        <h4 className=\"text-muted\">Add area</h4>\n                                                    </div>\n\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n\n                                                {saveLoading &&\n                                                    <div className=\"text-center\">\n                                                        <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    </div>}\n                                                {saveError && <h4 className=\"text-muted text-center\">area Already Exist</h4>}\n\n                                                <div className=\"modal-body\">\n                                                    <form onSubmit={submitHandler}>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Name\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} className=\"form-control rounded border-top-0 border-left-0 border-right-0\" id=\"exampleFormControlInput1\" placeholder=\"Area Description\" required />\n                                                        </div>\n\n                                                        <div className=\"form-group \">\n                                                            <label className=\"checkbox checkbox-primary\">\n                                                                <input type=\"checkbox\" onChange={handleCheck} defaultChecked={isActive} className='big-checkbox' name=\"status\" id=\"status\" value=\"active\" />\n                                                                <span className=\" ml-1 h5 text-muted\">Active</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div>\n                                                            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill\">Create Area</button>\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default AreaScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\regulate.js",["362","363","364","365","366","367","368","369","370"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport { listRegulateItemsAction } from \"../action/regulateItems\";\n\nconst RegulateScreen = (props) => {\n    const dispatch = useDispatch()\n    let serNo = 0   \n    const itemId = props.match.params.id\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const regulateItemListData = useSelector(state => state.regulateItemListData);\n    const { regulateItemList, loading, error } = regulateItemListData;\n    \n    useEffect(() => {\n        userInfo ? props.history.push('/regulate/'+itemId) : props.history.push('/signin');\n        dispatch(listRegulateItemsAction(itemId))\n\n    }, [userInfo])\n\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <div className='cart shadow bg-white rounded p-3 '>\n                                    <div>\n                                        <h5 className=\"text-muted\">Regulate Items</h5>\n                                    </div>\n\n                                    {/* table */}\n                                    <div className='table-responsive '>\n                                        <table className=\"table table-bordered table table-hover\">\n                                            <thead>\n                                                <tr className='table-active'>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Date</th>\n                                                    <th scope=\"col\">Min Price</th>\n                                                    <th scope=\"col\">Max Price</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"myTable\">\n                                                {regulateItemList ?.map(item =>\n                                                    <tr>\n                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                        <td>{new Date(item ?.createdAt).getDate() + '-' + new Date(item ?.createdAt).getMonth() + '-' + new Date(item ?.createdAt).getFullYear()}</td>\n                                                        <td>{item ?.minPrice}</td>\n                                                        <td>{item ?.maxPrice}</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            }\n                        </>\n                    }\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default RegulateScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\auth\\singin.js",["371"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { signin } from '../../action/auth'\nimport Logo from '../assets/Logo.jpeg'\nimport '../style/Login.css'\nimport $ from 'jquery'\nimport 'jquery-validation'\n\nconst SigninScreen = (props) => {\n\tconst dispatch = useDispatch()\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\tconst userSignin = useSelector(state => state.userSignin);\n\tconst { loading, userInfo, error } = userSignin;\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n      window.location.href = \"/\"\n      // window.location.reload()\n    }\t\t\n\t}, [userInfo])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(signin(email, password));\n\t}\n\n\treturn (\n\n\t\t<div className='login'>\n\n\t\t\t<div className=\"cover\"></div>\n\t\t\t<div style={{ maxWidth: \"430px\", margin: \"100px auto 50px\" }}>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<span className=\"auth-head-icon\"><i className=\"fa fa-user\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ibox login-box\">\n\t\t\t\t\t<form onSubmit={submitHandler} className=\"ibox-body p-3\" id=\"login-form\">\n\t\t\t\t\t\t<h4 className=\"font-strong text-center py-4 \">LOG IN</h4>\n\n\t\t\t\t\t\t{loading &&\n\t\t\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t\t\t<div class=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t\t\t\t<span class=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{error && <div className=\"text-danger text-center\">Invaled Username or Password</div>}\n\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setEmail(e.target.value)} value={email} type=\"text\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mb-4\">\n\t\t\t\t\t\t\t<input className=\"form-control form-control-line\" onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"flexbox mb-5\">\n\t\t\t\t\t\t\t<label className=\"checkbox checkbox-primary\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" id=\"remember\" />\n\t\t\t\t\t\t\t\t<span className=\"input-span\"></span> Remember\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<a className=\"color-inherit\" >Forgot password?</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"text-center pb-4\">\n\t\t\t\t\t\t\t<button type='submit' className=\"btn btn-primary btn-rounded btn-block\">LOGIN</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n$(function () {\n\t$('#login-form').validate({\n\t\terrorClass: \"help-block\",\n\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\thighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").addClass(\"has-error\")\n\t\t},\n\t\tunhighlight: function (e) {\n\t\t\t$(e).closest(\".form-group\").removeClass(\"has-error\")\n\t\t},\n\t});\n});\nexport default SigninScreen\n\n\n","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\Navbar.js",["372","373","374","375","376","377"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport Cookie from 'js-cookie'\nimport ProfileImg from './assets/profile.png'\nimport 'bootstrap/js/dist/tab';\nimport logo from './assets/Logo.jpeg'\nimport './style/Navbar.css'\nimport './style/Sidebar.css'\n\nconst Navbar = () => {\n    const history = useHistory()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const [sidebarOpen, setsidebarOpen] = useState(false);\n    const openSidebar = () => {\n        setsidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setsidebarOpen(false);\n    };\n\n    const logoutHandler = () => {\n        Cookie.remove(\"userInfo\");\n        history.push('/signin')\n        window.location.reload()\n    };\n\n\n    return (\n        <>\n\n            <nav className=\"navbar shadow\">\n                <div className=\"nav_icon\" onClick={() => openSidebar()}>\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"navbar__left\">\n                    {/* <a href=\"#\">Subscribers</a>\n                <a href=\"#\">Video Management</a>\n                <a className=\"active_link\" href=\"#\">\n                Admin\n                </a> */}\n                </div>\n                <div className=\"navbar__right\">\n                    {/* <a href=\"#\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </a>\n                <a href=\"#\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </a> */}\n                    <div className='chip'>\n                        <span className=\"dropdown\">\n                            <img src={ProfileImg} style={{ cursor: 'pointer' }} className=\"rounded-circle dropdown-toggle navImg\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\n                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                                <div style={{ width: '200px', margin: 'auto' }}>\n                                    <img src={ProfileImg} className=\"card-img-top rounded-circle\" style={{ width: '100px', display: \"block\", margin: 'auto' }} alt=\"Card image cap\" />\n                                    <h5 className=\"card-title text-center\">{userInfo?.data?.name}</h5>\n                                    <div className=\"card-body text-center\">\n                                        {/* <Link to='/profile' className=\" btn btn-info shadow rounded mr-2\"> <i className=\"fas fa-user\"></i></Link> */}\n                                        <button onClick={() => { if (window.confirm('Are you sure you want to log out?')) { logoutHandler() }; }} className=\" btn btn-danger shadow rounded\"> <i className=\"fas fa-sign-out-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </span>\n                        <span className=\"text-dark mx-2 h6\">{userInfo?.data?.name}</span>\n                    </div>\n                </div>\n            </nav>\n\n            <div className={sidebarOpen ? \"sidebar_responsive\" : \"\"} id=\"sidebar\">\n                <div className=\"sidebar__title\">\n                    <div className=\"sidebar__img\">\n                        {/* <Link to='/'>\n                    <img src={logo} alt=\"logo\" />\n\n                    </Link> */}\n                        <h4 className=\"title\">ADMIN</h4>\n                    </div>\n                    <i\n                        onClick={() => closeSidebar()}\n                        className=\"fa fa-times\"\n                        id=\"sidebarIcon\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/' activeClassName='text-success'>\n                            <i className=\"fa fa-home icon\"> </i>\n                            <p>Dashboard</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                {/* <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/regulate' activeClassName='text-success'>\n                            <i className=\"fa fa-save icon\"> </i>\n                            <p>Regulate Items</p>\n                        </NavLink>\n                    </div>\n                </div> */}\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/items' activeClassName='text-success'>\n                            <i className=\"fa fa-columns icon\"> </i>\n                            <p>Items</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/category' activeClassName='text-success'>\n                            <i className=\"fa fa-align-justify icon\"> </i>\n                            <p>Categories</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/units' activeClassName='text-success'>\n                            <i className=\"fa fa-grip-lines icon\"> </i>\n                            <p>Units</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/area' activeClassName='text-success'>\n                            <i className=\"fa fa-compass icon\"> </i>\n                            <p>Area</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/complaint' activeClassName='text-success'>\n                            <i className=\"fa fa-comment icon\"> </i>\n                            <p>Complaints</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div className=\"sidebar__menu\">\n                    <div className=\"sidebar__link active_menu_link\">\n                        <NavLink exact={true} to='/settings' activeClassName='text-success'>\n                            <i className=\"fa fa-cog icon\"> </i>\n                            <p>Settings</p>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default Navbar;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\auth.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\regulateChart.js",["378"],"import react from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\nconst RegulareChart = () => {\r\n\r\n    return (\r\n        <>\r\n        <h4 className='text-center pt-2'>Rates Analytics </h4>\r\n        <Chart\r\n        \r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Style', 'Fruit', 'Vagetible', 'Poultry'],\r\n          ['Sun', 92, 96, 2],\r\n          ['Mon', 86, 80, 32],\r\n          ['Tue', 76, 70, 23],\r\n          ['Wed', 56, 60, 34],\r\n          ['Thu', 59, 50, 63],\r\n          ['Fri', 72, 22, 60],\r\n          ['Sat', 80, 17, 40],\r\n        ]}\r\n        options={{\r\n          isStacked: false,\r\n          height: 300,\r\n          legend: { position: 'top', maxLines: 3 },\r\n          vAxis: {\r\n            minValue: 0,\r\n          },\r\n          hAxis: {\r\n            title: 'Date'\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      /> \r\n      </>      \r\n    )\r\n}\r\n\r\nexport default RegulareChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\chart\\itemBarChart.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392"],"import react, { useState } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ItemBarChart = (props) => {\r\n  const [chartSelect, setcChartSelect] = useState(1)\r\n\r\n  const itemListData = useSelector(state => state.itemListData);\r\n  const { itemList, loading: listItemLoading, error: listItemError } = itemListData;\r\n\r\n  const getFruits = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var fruitData = itemList.filter(function (item) {\r\n      return item ?.category === 'fruit' || item ?.category === 'fruits' \r\n    })\r\n    fruitData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  const getVagetable = () => {\r\n    var data = []\r\n    data.push(['Item', \"Max Price\", \"Min Price\"])\r\n\r\n    var vagetableData = itemList.filter(function (item) {\r\n      return item ?.category === 'vegetable' || item ?.category === 'vegetables' ||  item ?.category === 'vagetable' || item ?.category === 'vagetables'\r\n    })\r\n    vagetableData.map(item =>\r\n      data.push([item.name, item ?.maxPrice, item ?.minPrice])\r\n    )\r\n    return data\r\n  }\r\n\r\n  function chartData() {\r\n    if (chartSelect === 1) {\r\n      return getFruits()\r\n    }\r\n    if (chartSelect === 2) {\r\n      return getVagetable()\r\n    }\r\n    else {\r\n      return getFruits()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <div className=''>\r\n          <h3 className='text-center text-muted '>Rates Analytics</h3>\r\n        </div>\r\n\r\n        <div className=\"dropdown d-flex justify-content-end mt-2\">\r\n\r\n          <button className=\"btn btn-primary mx-1 mb-1\" onClick={() => setcChartSelect(1)} >Fruits</button>\r\n          <button className=\"btn btn-success mx-1 mb-1\" onClick={() => setcChartSelect(2)}>Vegetables</button>\r\n        </div>\r\n      </div>\r\n      <Chart\r\n        // width={'500px'}\r\n        // height={'300px'}\r\n\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={\r\n          chartData()\r\n        }\r\n        options={{\r\n          // colors: ['#FB7A21'],\r\n          // backgroundColor: '#2F4F4F',\r\n          chart: {\r\n            title: 'Company Performance',\r\n            subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n          },\r\n          legend: { position: 'none' },\r\n          title: \"weeklyTitle\",\r\n          titleTextStyle: { color: '#FFF' },\r\n          // vAxis: { title: 'Percentage', titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          // hAxis: { title: 'Month', fontSize: 28, titleTextStyle: { color: '#FFF' }, textStyle: { color: '#FFF' } },\r\n          seriesType: 'bars',\r\n          series: { 5: { type: 'line' } },\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemBarChart","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\screen\\complaint.js",["393","394","395","396","397"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '../App.css';\nimport Navbar from \"./Navbar\";\nimport './style/dashboard.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport $ from 'jquery'\nimport { listComplaintAction } from \"../action/complaint\";\nimport NotFound from './assets/notfound.png'\n\nconst ComplaintScreen = (props) => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    let serNo = 0\n    function showImage() {\n        return setLoaded(true)\n    }\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const complaintListData = useSelector(state => state.complaintListData);\n    const { complaintList, loading, error } = complaintListData;\n\n    useEffect(() => {\n        userInfo ? props.history.push('/complaint') : props.history.push('/signin');\n        dispatch(listComplaintAction())\n    }, [userInfo])\n    $(document).ready(function () {\n        $(\"#myInput\").on(\"keyup\", function () {\n            var value = $(this).val().toLowerCase();\n            $(\"#myTable tr\").filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n            });\n        });\n    });\n\n    return (\n        <>\n            <Navbar />\n            <main >\n\n                < div className=\" m-4\">\n\n                    {loading ?\n                        <div className=\"text-center\">\n                            <div className=\"spinner-border text-primary\" style={{ width: '50px', height: '50px', top: '-100px' }} role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <>\n                            {error ?\n                                <div className=' text-center'>\n                                    <h4 className=\"text-muted\">Somethings Wrong</h4>\n                                    <button className='btn btn-primary btn-sm' onClick={() => window.location.reload()}>Refresh</button>\n                                </div> :\n                                <>\n                                    <div className='cart shadow bg-white rounded p-3 '>\n                                        <div>\n                                            <h5 className=\"text-muted\">Area</h5>\n                                        </div>\n\n                                        {/* filter */}\n                                        <div className='row justify-content-between my-4'>\n\n                                            <div className='col-sm-3'>\n                                                <div className='d-flex justify-content-between'>\n                                                    <form>\n                                                        <div className=\"form-group\">\n                                                            <input type=\"text\" className=\"form-control  rounded-pill bg-light\" id=\"myInput\" placeholder=\"Search\" />\n                                                        </div>\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* table */}\n                                        {complaintList.length === 0 ? <h5 className=\"text-muted text-center\">Complaint Not Found!</h5> :\n                                            <div className='table-responsive '>\n                                                <table className=\"table table-bordered table table-hover\">\n                                                    <thead>\n                                                        <tr className='table-active'>\n                                                            <th scope=\"col\">#</th>\n                                                            <th scope=\"col\">Name</th>\n                                                            <th scope=\"col\">Contact</th>\n                                                            <th scope=\"col\">Details</th>\n                                                            <th scope=\"col\">image</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody id=\"myTable\">\n                                                        <>\n                                                            {complaintList?.map(complaint =>\n                                                                <>\n                                                                    <tr>\n                                                                        <th scope=\"row\">{serNo += 1}</th>\n                                                                        <td>{complaint?.name}</td>\n                                                                        <td>{complaint?.contactNo}</td>\n                                                                        <td>{complaint?.detail}</td>\n                                                                        <td>\n                                                                            <img src={NotFound} width=\"100\" height=\"50\" style={loaded ? { display: \"none\" } : {}} />\n\n                                                                            <img src={'http://localhost:5000/' + complaint.image} width=\"100\" height=\"50\" onLoad={showImage} style={loaded ? {} : { display: \"none\" }} />\n\n                                                                        </td>\n\n                                                                    </tr>\n\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    </tbody>\n\n                                                </table>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </>\n                            }\n                        </>\n\n                    }\n                    <ToastContainer />\n                </div>\n            </main>\n        </>\n    )\n\n}\n\nexport default ComplaintScreen;","H:\\codding\\MERN\\projects\\drust-daam\\server\\client\\src\\action\\complaint.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\index.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reportWebVitals.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\App.js",["398","399","400"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\store\\Store.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\settings.js",["401"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\unit.js",["402","403","404","405"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\Dashboard.js",["406","407","408","409","410","411","412","413","414"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\complaint.js",["415","416","417","418","419"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\item.js",["420","421","422","423"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\area.js",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\category.js",["446","447","448","449"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\regulate.js",["450","451","452","453","454","455","456","457","458"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\auth\\singin.js",["459"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\auth.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\items.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\category.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\unit.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\area.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\reducer\\complaint.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\Navbar.js",["460","461","462","463","464","465"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\auth.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\unit.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\category.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\items.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\area.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\complaint.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\action\\regulateItems.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\chart\\regulateChart.js",["466"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\screen\\chart\\itemBarChart.js",["467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\regulateItem.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\items.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\area.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\complaint.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\unit.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\category.js",[],"H:\\codding\\MERN\\projects\\project property\\server\\client\\src\\contant\\auth.js",[],{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","severity":1,"message":"486","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":23},{"ruleId":"485","severity":1,"message":"489","line":2,"column":32,"nodeType":"487","messageId":"488","endLine":2,"endColumn":38},{"ruleId":"485","severity":1,"message":"490","line":2,"column":40,"nodeType":"487","messageId":"488","endLine":2,"endColumn":46},{"ruleId":"485","severity":1,"message":"491","line":40,"column":22,"nodeType":"487","messageId":"488","endLine":40,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":40,"column":44,"nodeType":"487","messageId":"488","endLine":40,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":57,"column":8,"nodeType":"495","endLine":57,"endColumn":18,"suggestions":"496"},{"ruleId":"497","severity":1,"message":"498","line":158,"column":37,"nodeType":"499","messageId":"500","endLine":158,"endColumn":46},{"ruleId":"485","severity":1,"message":"491","line":30,"column":22,"nodeType":"487","messageId":"488","endLine":30,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":30,"column":44,"nodeType":"487","messageId":"488","endLine":30,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":41,"column":8,"nodeType":"495","endLine":41,"endColumn":18,"suggestions":"501"},{"ruleId":"497","severity":1,"message":"498","line":102,"column":37,"nodeType":"499","messageId":"500","endLine":102,"endColumn":46},{"ruleId":"485","severity":1,"message":"502","line":1,"column":28,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"485","severity":1,"message":"503","line":12,"column":8,"nodeType":"487","messageId":"488","endLine":12,"endColumn":21},{"ruleId":"485","severity":1,"message":"504","line":24,"column":32,"nodeType":"487","messageId":"488","endLine":24,"endColumn":47},{"ruleId":"485","severity":1,"message":"505","line":24,"column":56,"nodeType":"487","messageId":"488","endLine":24,"endColumn":69},{"ruleId":"485","severity":1,"message":"506","line":27,"column":36,"nodeType":"487","messageId":"488","endLine":27,"endColumn":55},{"ruleId":"485","severity":1,"message":"507","line":27,"column":64,"nodeType":"487","messageId":"488","endLine":27,"endColumn":81},{"ruleId":"485","severity":1,"message":"508","line":30,"column":32,"nodeType":"487","messageId":"488","endLine":30,"endColumn":47},{"ruleId":"485","severity":1,"message":"509","line":30,"column":56,"nodeType":"487","messageId":"488","endLine":30,"endColumn":69},{"ruleId":"493","severity":1,"message":"494","line":38,"column":8,"nodeType":"495","endLine":38,"endColumn":18,"suggestions":"510"},{"ruleId":"485","severity":1,"message":"491","line":30,"column":22,"nodeType":"487","messageId":"488","endLine":30,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":30,"column":44,"nodeType":"487","messageId":"488","endLine":30,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":41,"column":8,"nodeType":"495","endLine":41,"endColumn":18,"suggestions":"511"},{"ruleId":"497","severity":1,"message":"498","line":102,"column":37,"nodeType":"499","messageId":"500","endLine":102,"endColumn":46},{"ruleId":"493","severity":1,"message":"512","line":26,"column":8,"nodeType":"495","endLine":26,"endColumn":18,"suggestions":"513"},{"ruleId":"485","severity":1,"message":"491","line":29,"column":22,"nodeType":"487","messageId":"488","endLine":29,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":29,"column":44,"nodeType":"487","messageId":"488","endLine":29,"endColumn":55},{"ruleId":"485","severity":1,"message":"514","line":35,"column":22,"nodeType":"487","messageId":"488","endLine":35,"endColumn":33},{"ruleId":"485","severity":1,"message":"515","line":35,"column":42,"nodeType":"487","messageId":"488","endLine":35,"endColumn":51},{"ruleId":"493","severity":1,"message":"494","line":40,"column":8,"nodeType":"495","endLine":40,"endColumn":18,"suggestions":"516"},{"ruleId":"517","severity":1,"message":"518","line":42,"column":22,"nodeType":"519","messageId":"520","endLine":42,"endColumn":39,"fix":"521"},{"ruleId":"517","severity":1,"message":"522","line":44,"column":20,"nodeType":"519","messageId":"520","endLine":44,"endColumn":35,"fix":"523"},{"ruleId":"517","severity":1,"message":"522","line":46,"column":20,"nodeType":"519","messageId":"520","endLine":46,"endColumn":35,"fix":"524"},{"ruleId":"517","severity":1,"message":"525","line":92,"column":15,"nodeType":"519","messageId":"520","endLine":92,"endColumn":25,"fix":"526"},{"ruleId":"517","severity":1,"message":"527","line":93,"column":17,"nodeType":"519","messageId":"520","endLine":93,"endColumn":28,"fix":"528"},{"ruleId":"517","severity":1,"message":"529","line":94,"column":24,"nodeType":"519","messageId":"520","endLine":94,"endColumn":42,"fix":"530"},{"ruleId":"517","severity":1,"message":"522","line":95,"column":21,"nodeType":"519","messageId":"520","endLine":95,"endColumn":36,"fix":"531"},{"ruleId":"497","severity":1,"message":"498","line":101,"column":37,"nodeType":"499","messageId":"500","endLine":101,"endColumn":46},{"ruleId":"517","severity":1,"message":"532","line":179,"column":62,"nodeType":"519","messageId":"520","endLine":179,"endColumn":78,"fix":"533"},{"ruleId":"517","severity":1,"message":"527","line":183,"column":78,"nodeType":"519","messageId":"520","endLine":183,"endColumn":89,"fix":"534"},{"ruleId":"517","severity":1,"message":"529","line":184,"column":78,"nodeType":"519","messageId":"520","endLine":184,"endColumn":96,"fix":"535"},{"ruleId":"517","severity":1,"message":"522","line":186,"column":90,"nodeType":"519","messageId":"520","endLine":186,"endColumn":105,"fix":"536"},{"ruleId":"517","severity":1,"message":"522","line":186,"column":175,"nodeType":"519","messageId":"520","endLine":186,"endColumn":190,"fix":"537"},{"ruleId":"517","severity":1,"message":"525","line":189,"column":204,"nodeType":"519","messageId":"520","endLine":189,"endColumn":214,"fix":"538"},{"ruleId":"517","severity":1,"message":"525","line":190,"column":214,"nodeType":"519","messageId":"520","endLine":190,"endColumn":224,"fix":"539"},{"ruleId":"517","severity":1,"message":"525","line":198,"column":115,"nodeType":"519","messageId":"520","endLine":198,"endColumn":125,"fix":"540"},{"ruleId":"517","severity":1,"message":"522","line":225,"column":176,"nodeType":"519","messageId":"520","endLine":225,"endColumn":191,"fix":"541"},{"ruleId":"485","severity":1,"message":"502","line":1,"column":28,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"493","severity":1,"message":"542","line":27,"column":8,"nodeType":"495","endLine":27,"endColumn":18,"suggestions":"543"},{"ruleId":"497","severity":1,"message":"498","line":32,"column":37,"nodeType":"499","messageId":"500","endLine":32,"endColumn":46},{"ruleId":"517","severity":1,"message":"532","line":75,"column":50,"nodeType":"519","messageId":"520","endLine":75,"endColumn":72,"fix":"544"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":71,"nodeType":"519","messageId":"520","endLine":78,"endColumn":87,"fix":"546"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":116,"nodeType":"519","messageId":"520","endLine":78,"endColumn":132,"fix":"547"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":162,"nodeType":"519","messageId":"520","endLine":78,"endColumn":178,"fix":"548"},{"ruleId":"517","severity":1,"message":"549","line":79,"column":62,"nodeType":"519","messageId":"520","endLine":79,"endColumn":77,"fix":"550"},{"ruleId":"517","severity":1,"message":"551","line":80,"column":62,"nodeType":"519","messageId":"520","endLine":80,"endColumn":77,"fix":"552"},{"ruleId":"485","severity":1,"message":"553","line":4,"column":8,"nodeType":"487","messageId":"488","endLine":4,"endColumn":12},{"ruleId":"485","severity":1,"message":"554","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":14},{"ruleId":"485","severity":1,"message":"555","line":7,"column":8,"nodeType":"487","messageId":"488","endLine":7,"endColumn":12},{"ruleId":"556","severity":1,"message":"557","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"559","severity":1,"message":"560","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"559","severity":1,"message":"561","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"562","severity":1,"message":"563","line":56,"column":37,"nodeType":"558","endLine":56,"endColumn":183},{"ruleId":"485","severity":1,"message":"564","line":1,"column":8,"nodeType":"487","messageId":"488","endLine":1,"endColumn":13},{"ruleId":"485","severity":1,"message":"564","line":1,"column":8,"nodeType":"487","messageId":"488","endLine":1,"endColumn":13},{"ruleId":"485","severity":1,"message":"565","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":21},{"ruleId":"485","severity":1,"message":"566","line":10,"column":30,"nodeType":"487","messageId":"488","endLine":10,"endColumn":45},{"ruleId":"485","severity":1,"message":"567","line":10,"column":54,"nodeType":"487","messageId":"488","endLine":10,"endColumn":67},{"ruleId":"517","severity":1,"message":"568","line":17,"column":14,"nodeType":"519","messageId":"520","endLine":17,"endColumn":29,"fix":"569"},{"ruleId":"517","severity":1,"message":"568","line":17,"column":45,"nodeType":"519","messageId":"520","endLine":17,"endColumn":60,"fix":"570"},{"ruleId":"517","severity":1,"message":"551","line":20,"column":29,"nodeType":"519","messageId":"520","endLine":20,"endColumn":44,"fix":"571"},{"ruleId":"517","severity":1,"message":"549","line":20,"column":46,"nodeType":"519","messageId":"520","endLine":20,"endColumn":61,"fix":"572"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":14,"nodeType":"519","messageId":"520","endLine":30,"endColumn":29,"fix":"573"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":49,"nodeType":"519","messageId":"520","endLine":30,"endColumn":64,"fix":"574"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":86,"nodeType":"519","messageId":"520","endLine":30,"endColumn":101,"fix":"575"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":121,"nodeType":"519","messageId":"520","endLine":30,"endColumn":136,"fix":"576"},{"ruleId":"517","severity":1,"message":"551","line":33,"column":29,"nodeType":"519","messageId":"520","endLine":33,"endColumn":44,"fix":"577"},{"ruleId":"517","severity":1,"message":"549","line":33,"column":46,"nodeType":"519","messageId":"520","endLine":33,"endColumn":61,"fix":"578"},{"ruleId":"485","severity":1,"message":"579","line":8,"column":26,"nodeType":"487","messageId":"488","endLine":8,"endColumn":31},{"ruleId":"493","severity":1,"message":"494","line":31,"column":8,"nodeType":"495","endLine":31,"endColumn":18,"suggestions":"580"},{"ruleId":"497","severity":1,"message":"498","line":35,"column":37,"nodeType":"499","messageId":"500","endLine":35,"endColumn":46},{"ruleId":"556","severity":1,"message":"557","line":105,"column":77,"nodeType":"558","endLine":105,"endColumn":165},{"ruleId":"556","severity":1,"message":"557","line":107,"column":77,"nodeType":"558","endLine":107,"endColumn":218},{"ruleId":"485","severity":1,"message":"486","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":23},{"ruleId":"485","severity":1,"message":"489","line":2,"column":32,"nodeType":"487","messageId":"488","endLine":2,"endColumn":38},{"ruleId":"485","severity":1,"message":"490","line":2,"column":40,"nodeType":"487","messageId":"488","endLine":2,"endColumn":46},{"ruleId":"493","severity":1,"message":"512","line":26,"column":8,"nodeType":"495","endLine":26,"endColumn":18,"suggestions":"581"},{"ruleId":"485","severity":1,"message":"491","line":30,"column":22,"nodeType":"487","messageId":"488","endLine":30,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":30,"column":44,"nodeType":"487","messageId":"488","endLine":30,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":41,"column":8,"nodeType":"495","endLine":41,"endColumn":18,"suggestions":"582"},{"ruleId":"497","severity":1,"message":"498","line":102,"column":37,"nodeType":"499","messageId":"500","endLine":102,"endColumn":46},{"ruleId":"485","severity":1,"message":"502","line":1,"column":28,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"485","severity":1,"message":"503","line":12,"column":8,"nodeType":"487","messageId":"488","endLine":12,"endColumn":21},{"ruleId":"485","severity":1,"message":"504","line":24,"column":32,"nodeType":"487","messageId":"488","endLine":24,"endColumn":47},{"ruleId":"485","severity":1,"message":"505","line":24,"column":56,"nodeType":"487","messageId":"488","endLine":24,"endColumn":69},{"ruleId":"485","severity":1,"message":"506","line":27,"column":36,"nodeType":"487","messageId":"488","endLine":27,"endColumn":55},{"ruleId":"485","severity":1,"message":"507","line":27,"column":64,"nodeType":"487","messageId":"488","endLine":27,"endColumn":81},{"ruleId":"485","severity":1,"message":"508","line":30,"column":32,"nodeType":"487","messageId":"488","endLine":30,"endColumn":47},{"ruleId":"485","severity":1,"message":"509","line":30,"column":56,"nodeType":"487","messageId":"488","endLine":30,"endColumn":69},{"ruleId":"493","severity":1,"message":"494","line":38,"column":8,"nodeType":"495","endLine":38,"endColumn":18,"suggestions":"583"},{"ruleId":"485","severity":1,"message":"579","line":8,"column":26,"nodeType":"487","messageId":"488","endLine":8,"endColumn":31},{"ruleId":"493","severity":1,"message":"494","line":31,"column":8,"nodeType":"495","endLine":31,"endColumn":18,"suggestions":"584"},{"ruleId":"497","severity":1,"message":"498","line":35,"column":37,"nodeType":"499","messageId":"500","endLine":35,"endColumn":46},{"ruleId":"556","severity":1,"message":"557","line":105,"column":77,"nodeType":"558","endLine":105,"endColumn":165},{"ruleId":"556","severity":1,"message":"557","line":107,"column":77,"nodeType":"558","endLine":107,"endColumn":218},{"ruleId":"485","severity":1,"message":"491","line":40,"column":22,"nodeType":"487","messageId":"488","endLine":40,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":40,"column":44,"nodeType":"487","messageId":"488","endLine":40,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":57,"column":8,"nodeType":"495","endLine":57,"endColumn":18,"suggestions":"585"},{"ruleId":"497","severity":1,"message":"498","line":158,"column":37,"nodeType":"499","messageId":"500","endLine":158,"endColumn":46},{"ruleId":"485","severity":1,"message":"491","line":29,"column":22,"nodeType":"487","messageId":"488","endLine":29,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":29,"column":44,"nodeType":"487","messageId":"488","endLine":29,"endColumn":55},{"ruleId":"485","severity":1,"message":"514","line":35,"column":22,"nodeType":"487","messageId":"488","endLine":35,"endColumn":33},{"ruleId":"485","severity":1,"message":"515","line":35,"column":42,"nodeType":"487","messageId":"488","endLine":35,"endColumn":51},{"ruleId":"493","severity":1,"message":"494","line":40,"column":8,"nodeType":"495","endLine":40,"endColumn":18,"suggestions":"586"},{"ruleId":"517","severity":1,"message":"518","line":42,"column":22,"nodeType":"519","messageId":"520","endLine":42,"endColumn":39,"fix":"587"},{"ruleId":"517","severity":1,"message":"522","line":44,"column":20,"nodeType":"519","messageId":"520","endLine":44,"endColumn":35,"fix":"588"},{"ruleId":"517","severity":1,"message":"522","line":46,"column":20,"nodeType":"519","messageId":"520","endLine":46,"endColumn":35,"fix":"589"},{"ruleId":"517","severity":1,"message":"525","line":92,"column":15,"nodeType":"519","messageId":"520","endLine":92,"endColumn":25,"fix":"590"},{"ruleId":"517","severity":1,"message":"527","line":93,"column":17,"nodeType":"519","messageId":"520","endLine":93,"endColumn":28,"fix":"591"},{"ruleId":"517","severity":1,"message":"529","line":94,"column":24,"nodeType":"519","messageId":"520","endLine":94,"endColumn":42,"fix":"592"},{"ruleId":"517","severity":1,"message":"522","line":95,"column":21,"nodeType":"519","messageId":"520","endLine":95,"endColumn":36,"fix":"593"},{"ruleId":"497","severity":1,"message":"498","line":101,"column":37,"nodeType":"499","messageId":"500","endLine":101,"endColumn":46},{"ruleId":"517","severity":1,"message":"532","line":179,"column":62,"nodeType":"519","messageId":"520","endLine":179,"endColumn":78,"fix":"594"},{"ruleId":"517","severity":1,"message":"527","line":183,"column":78,"nodeType":"519","messageId":"520","endLine":183,"endColumn":89,"fix":"595"},{"ruleId":"517","severity":1,"message":"529","line":184,"column":78,"nodeType":"519","messageId":"520","endLine":184,"endColumn":96,"fix":"596"},{"ruleId":"517","severity":1,"message":"522","line":186,"column":90,"nodeType":"519","messageId":"520","endLine":186,"endColumn":105,"fix":"597"},{"ruleId":"517","severity":1,"message":"522","line":186,"column":175,"nodeType":"519","messageId":"520","endLine":186,"endColumn":190,"fix":"598"},{"ruleId":"517","severity":1,"message":"525","line":189,"column":204,"nodeType":"519","messageId":"520","endLine":189,"endColumn":214,"fix":"599"},{"ruleId":"517","severity":1,"message":"525","line":190,"column":214,"nodeType":"519","messageId":"520","endLine":190,"endColumn":224,"fix":"600"},{"ruleId":"517","severity":1,"message":"525","line":198,"column":115,"nodeType":"519","messageId":"520","endLine":198,"endColumn":125,"fix":"601"},{"ruleId":"517","severity":1,"message":"522","line":225,"column":176,"nodeType":"519","messageId":"520","endLine":225,"endColumn":191,"fix":"602"},{"ruleId":"485","severity":1,"message":"491","line":30,"column":22,"nodeType":"487","messageId":"488","endLine":30,"endColumn":35},{"ruleId":"485","severity":1,"message":"492","line":30,"column":44,"nodeType":"487","messageId":"488","endLine":30,"endColumn":55},{"ruleId":"493","severity":1,"message":"494","line":41,"column":8,"nodeType":"495","endLine":41,"endColumn":18,"suggestions":"603"},{"ruleId":"497","severity":1,"message":"498","line":102,"column":37,"nodeType":"499","messageId":"500","endLine":102,"endColumn":46},{"ruleId":"485","severity":1,"message":"502","line":1,"column":28,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"493","severity":1,"message":"542","line":27,"column":8,"nodeType":"495","endLine":27,"endColumn":18,"suggestions":"604"},{"ruleId":"497","severity":1,"message":"498","line":32,"column":37,"nodeType":"499","messageId":"500","endLine":32,"endColumn":46},{"ruleId":"517","severity":1,"message":"532","line":75,"column":50,"nodeType":"519","messageId":"520","endLine":75,"endColumn":72,"fix":"605"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":71,"nodeType":"519","messageId":"520","endLine":78,"endColumn":87,"fix":"606"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":116,"nodeType":"519","messageId":"520","endLine":78,"endColumn":132,"fix":"607"},{"ruleId":"517","severity":1,"message":"545","line":78,"column":162,"nodeType":"519","messageId":"520","endLine":78,"endColumn":178,"fix":"608"},{"ruleId":"517","severity":1,"message":"549","line":79,"column":62,"nodeType":"519","messageId":"520","endLine":79,"endColumn":77,"fix":"609"},{"ruleId":"517","severity":1,"message":"551","line":80,"column":62,"nodeType":"519","messageId":"520","endLine":80,"endColumn":77,"fix":"610"},{"ruleId":"485","severity":1,"message":"553","line":4,"column":8,"nodeType":"487","messageId":"488","endLine":4,"endColumn":12},{"ruleId":"485","severity":1,"message":"554","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":14},{"ruleId":"485","severity":1,"message":"555","line":7,"column":8,"nodeType":"487","messageId":"488","endLine":7,"endColumn":12},{"ruleId":"556","severity":1,"message":"557","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"559","severity":1,"message":"560","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"559","severity":1,"message":"561","line":53,"column":29,"nodeType":"558","endLine":53,"endColumn":223},{"ruleId":"562","severity":1,"message":"563","line":56,"column":37,"nodeType":"558","endLine":56,"endColumn":183},{"ruleId":"485","severity":1,"message":"564","line":1,"column":8,"nodeType":"487","messageId":"488","endLine":1,"endColumn":13},{"ruleId":"485","severity":1,"message":"564","line":1,"column":8,"nodeType":"487","messageId":"488","endLine":1,"endColumn":13},{"ruleId":"485","severity":1,"message":"565","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":21},{"ruleId":"485","severity":1,"message":"566","line":10,"column":30,"nodeType":"487","messageId":"488","endLine":10,"endColumn":45},{"ruleId":"485","severity":1,"message":"567","line":10,"column":54,"nodeType":"487","messageId":"488","endLine":10,"endColumn":67},{"ruleId":"517","severity":1,"message":"568","line":17,"column":14,"nodeType":"519","messageId":"520","endLine":17,"endColumn":29,"fix":"611"},{"ruleId":"517","severity":1,"message":"568","line":17,"column":45,"nodeType":"519","messageId":"520","endLine":17,"endColumn":60,"fix":"612"},{"ruleId":"517","severity":1,"message":"551","line":20,"column":29,"nodeType":"519","messageId":"520","endLine":20,"endColumn":44,"fix":"613"},{"ruleId":"517","severity":1,"message":"549","line":20,"column":46,"nodeType":"519","messageId":"520","endLine":20,"endColumn":61,"fix":"614"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":14,"nodeType":"519","messageId":"520","endLine":30,"endColumn":29,"fix":"615"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":49,"nodeType":"519","messageId":"520","endLine":30,"endColumn":64,"fix":"616"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":86,"nodeType":"519","messageId":"520","endLine":30,"endColumn":101,"fix":"617"},{"ruleId":"517","severity":1,"message":"568","line":30,"column":121,"nodeType":"519","messageId":"520","endLine":30,"endColumn":136,"fix":"618"},{"ruleId":"517","severity":1,"message":"551","line":33,"column":29,"nodeType":"519","messageId":"520","endLine":33,"endColumn":44,"fix":"619"},{"ruleId":"517","severity":1,"message":"549","line":33,"column":46,"nodeType":"519","messageId":"520","endLine":33,"endColumn":61,"fix":"620"},"no-native-reassign",["621"],"no-negated-in-lhs",["622"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'DeleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["623"],"array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside",["624"],"'useState' is defined but never used.","'RegulareChart' is defined but never used.","'listAreaLoading' is assigned a value but never used.","'listAreaError' is assigned a value but never used.","'listCategoryLoading' is assigned a value but never used.","'listCategoryError' is assigned a value but never used.","'listUnitLoading' is assigned a value but never used.","'listUnitError' is assigned a value but never used.",["625"],["626"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["627"],"'editLoading' is assigned a value but never used.","'editError' is assigned a value but never used.",["628"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"629","text":"630"},"Unexpected whitespace before property isActive.",{"range":"631","text":"630"},{"range":"632","text":"630"},"Unexpected whitespace before property _id.",{"range":"633","text":"630"},"Unexpected whitespace before property name.",{"range":"634","text":"630"},"Unexpected whitespace before property description.",{"range":"635","text":"630"},{"range":"636","text":"630"},"Unexpected whitespace before property map.",{"range":"637","text":"630"},{"range":"638","text":"630"},{"range":"639","text":"630"},{"range":"640","text":"630"},{"range":"641","text":"630"},{"range":"642","text":"630"},{"range":"643","text":"630"},{"range":"644","text":"630"},{"range":"645","text":"630"},"React Hook useEffect has missing dependencies: 'dispatch', 'itemId', and 'props.history'. Either include them or remove the dependency array.",["646"],{"range":"647","text":"630"},"Unexpected whitespace before property createdAt.",{"range":"648","text":"630"},{"range":"649","text":"630"},{"range":"650","text":"630"},"Unexpected whitespace before property minPrice.",{"range":"651","text":"630"},"Unexpected whitespace before property maxPrice.",{"range":"652","text":"630"},"'Logo' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role img. This role is implicit on the element img.","The attribute aria-expanded is not supported by the role img. This role is implicit on the element img.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'react' is defined but never used.","'useDispatch' is defined but never used.","'listItemLoading' is assigned a value but never used.","'listItemError' is assigned a value but never used.","Unexpected whitespace before property category.",{"range":"653","text":"630"},{"range":"654","text":"630"},{"range":"655","text":"630"},{"range":"656","text":"630"},{"range":"657","text":"630"},{"range":"658","text":"630"},{"range":"659","text":"630"},{"range":"660","text":"630"},{"range":"661","text":"630"},{"range":"662","text":"630"},"'toast' is defined but never used.",["663"],["664"],["665"],["666"],["667"],["668"],["669"],{"range":"670","text":"630"},{"range":"671","text":"630"},{"range":"672","text":"630"},{"range":"673","text":"630"},{"range":"674","text":"630"},{"range":"675","text":"630"},{"range":"676","text":"630"},{"range":"677","text":"630"},{"range":"678","text":"630"},{"range":"679","text":"630"},{"range":"680","text":"630"},{"range":"681","text":"630"},{"range":"682","text":"630"},{"range":"683","text":"630"},{"range":"684","text":"630"},{"range":"685","text":"630"},["686"],["687"],{"range":"688","text":"630"},{"range":"689","text":"630"},{"range":"690","text":"630"},{"range":"691","text":"630"},{"range":"692","text":"630"},{"range":"693","text":"630"},{"range":"694","text":"630"},{"range":"695","text":"630"},{"range":"696","text":"630"},{"range":"697","text":"630"},{"range":"698","text":"630"},{"range":"699","text":"630"},{"range":"700","text":"630"},{"range":"701","text":"630"},{"range":"702","text":"630"},{"range":"703","text":"630"},"no-global-assign","no-unsafe-negation",{"desc":"704","fix":"705"},{"desc":"704","fix":"706"},{"desc":"704","fix":"707"},{"desc":"704","fix":"708"},{"desc":"709","fix":"710"},{"desc":"704","fix":"711"},[1694,1697],"?.",[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"712","fix":"713"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],{"desc":"704","fix":"714"},{"desc":"709","fix":"715"},{"desc":"704","fix":"716"},{"desc":"704","fix":"717"},{"desc":"704","fix":"718"},{"desc":"704","fix":"719"},{"desc":"704","fix":"720"},[1694,1697],[1788,1791],[1880,1883],[2931,2934],[2959,2962],[2995,2998],[3035,3038],[8085,8088],[8427,8430],[8522,8525],[8713,8716],[8798,8801],[9205,9208],[9478,9481],[10066,10069],[13217,13220],{"desc":"704","fix":"721"},{"desc":"712","fix":"722"},[3367,3370],[3603,3606],[3648,3651],[3694,3697],[3793,3796],[3876,3879],[565,568],[596,599],[690,693],[707,710],[933,936],[968,971],[1005,1008],[1040,1043],[1141,1144],[1158,1161],"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"723","text":"724"},{"range":"725","text":"724"},{"range":"726","text":"724"},{"range":"727","text":"724"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"728","text":"729"},{"range":"730","text":"724"},"Update the dependencies array to be: [dispatch, itemId, props.history, userInfo]",{"range":"731","text":"732"},{"range":"733","text":"724"},{"range":"734","text":"729"},{"range":"735","text":"724"},{"range":"736","text":"724"},{"range":"737","text":"724"},{"range":"738","text":"724"},{"range":"739","text":"724"},{"range":"740","text":"724"},{"range":"741","text":"732"},[2455,2465],"[dispatch, props.history, userInfo]",[1700,1710],[1657,1667],[1783,1793],[1043,1053],"[props.history, userInfo]",[1652,1662],[988,998],"[dispatch, itemId, props.history, userInfo]",[1070,1080],[1043,1053],[1700,1710],[1657,1667],[1070,1080],[2455,2465],[1652,1662],[1783,1793],[988,998]]